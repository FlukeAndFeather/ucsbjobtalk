---
title: "Data Science Prior Knowledge"
format:
  revealjs: 
    code-fold: true
    fig-height: 6
editor: visual
---

```{r}
#| label: read-data
#| include: false

library(googlesheets4)
library(patchwork)
library(tidyverse)

gs4_deauth()

prior_knowledge <- read_sheet("https://docs.google.com/spreadsheets/d/1cTGQmHEu6yxWKHobMX_mhx4xyL8TdpnE1hC7Kt_IJW8/edit?resourcekey#gid=1602360422",
           col_names = c("timestamp",
                         "name",
                         "career_stage",
                         "priorTabular data",
                         "priorFunctions",
                         "priorDataviz",
                         "priorReproducibility",
                         "priorGeospatial"),
           skip = 1) %>% 
  mutate(across(starts_with("prior"), parse_number),
         id = row_number())

```

The distribution of data science *prior knowledge*

```{r}
#| label: prior_knowledge

prior_knowledge_long <- prior_knowledge %>% 
  pivot_longer(cols = starts_with("prior"),
               names_to = "skill",
               values_to = "rating") %>% 
  mutate(skill = factor(substr(skill, 6, 100)))

prior_knowledge_summary <- prior_knowledge_long %>% 
  group_by(career_stage, skill) %>% 
  summarize(rating = mean(rating),
            .groups = "drop")

all_participants <- prior_knowledge_long %>% 
  # Introduce a jitter for both points and lines
  mutate(rating = rating + runif(n(), -0.1, 0.1)) %>% 
  ggplot(aes(skill, rating, color = career_stage)) +
  geom_line(aes(group = id), alpha = 0.5, linewidth = 1.2) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(values = c(Student = "#e7298a",
                                `Post-doc` = "#7570b3",
                                `Faculty (pre-tenure)` = "#d95f02",
                                `Faculty (tenured)` = "#1b9e77")) +
  guides(color = guide_legend(override.aes = list(size = 4, 
                                                  linewidth = 2))) +
  expand_limits(y = c(0, 4)) +
  labs(y = "Rating")

participant_summary <- prior_knowledge_summary %>% 
  # Introduce a jitter for both points and lines
  mutate(rating = rating + runif(n(), -0.1, 0.1)) %>% 
  ggplot(aes(skill, rating, color = career_stage)) +
  geom_line(aes(group = career_stage), alpha = 0.5, linewidth = 1.2) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(values = c(Student = "#e7298a",
                                `Post-doc` = "#7570b3",
                                `Faculty (pre-tenure)` = "#d95f02",
                                `Faculty (tenured)` = "#1b9e77")) +
  guides(color = guide_legend(override.aes = list(size = 4, 
                                                  linewidth = 2))) +
  expand_limits(y = c(0, 4)) +
  labs(y = "Rating")
  
(participant_summary | all_participants) + 
  plot_layout(guides = "collect") &
  theme_classic(base_size = 20) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.title.x = element_blank(),
        legend.key.width = unit(0.5, "in"),
        legend.position = "bottom",
        legend.title = element_blank())
```

---

Two most dissimilar experiences

```{r}
#| label: dissimilar

# Convert to a matrix
prior_knowledge_wide <- prior_knowledge_long %>% 
  filter(career_stage == "Student") %>% 
  mutate(name_id = paste(name, id)) %>% 
  pivot_wider(names_from = skill, 
              values_from = rating, 
              id_cols = name_id)
prior_knowledge_mtx <- prior_knowledge_wide %>% 
  select(-1) %>% 
  as.matrix()
rownames(prior_knowledge_mtx) <- prior_knowledge_wide[[1]]

# Calculate Euclidean distance between individuals
prior_knowledge_dist <- dist(prior_knowledge_mtx)

# Get labels of two most distant individuals
# Pulling out the labels of the maximum distance is weirdly hard!
n_people <- attr(prior_knowledge_dist, "Size")
max_dist <- expand_grid(i = seq(n_people), j = seq(n_people)) %>% 
  filter(i < j) %>%
  mutate(ij = n_people * (i - 1) - i * (i - 1) / 2 + j - i, 
         dij = prior_knowledge_dist,
         label_i = attr(prior_knowledge_dist, "Labels")[i],
         label_j = attr(prior_knowledge_dist, "Labels")[j]) %>% 
  filter(dij == max(dij)) %>% 
  slice(1)

# Plot those two individuals
prior_knowledge_long %>% 
  mutate(name_id = paste(name, id),
         rating = rating + runif(n(), -0.1, 0.1)) %>% 
  filter(name_id %in% c(max_dist$label_i, max_dist$label_j)) %>% 
  ggplot(aes(skill, rating)) +
  geom_line(aes(group = name_id, linetype = name_id, color = career_stage), 
            alpha = 0.5, 
            linewidth = 1.25) +
  geom_point(aes(fill = career_stage), alpha = 0.8, size = 4, shape = 21) +
  scale_color_manual(values = c(Student = "#e7298a",
                                `Post-doc` = "#7570b3",
                                `Faculty (pre-tenure)` = "#d95f02",
                                `Faculty (tenured)` = "#1b9e77")) +
  scale_fill_manual(values = c(Student = "#e7298a",
                               `Post-doc` = "#7570b3",
                               `Faculty (pre-tenure)` = "#d95f02",
                               `Faculty (tenured)` = "#1b9e77")) +
  scale_linetype_manual(values = c("dotted", "dashed")) +
  guides(linetype = "none") +
  expand_limits(y = c(0, 4)) +
  labs(y = "Rating") +
  theme_classic(base_size = 18) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        axis.title.x = element_blank(),
        legend.key.width = unit(0.5, "in"),
        legend.position = "bottom",
        legend.title = element_blank())
```
